apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
spec:
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: k8s.gcr.io/external-dns/external-dns:v0.13.4
        args:
        - --source=service
        - --source=ingress
        - --provider=none  # Prevents External-DNS from failing due to missing provider
        - --log-level=debug
        volumeMounts:
        - name: script
          mountPath: /usr/local/bin/update-pihole.sh
          subPath: update-pihole.sh
      - name: dns-updater
        image: alpine
        command: ["/bin/sh", "-c"]
        args:
        - |
          tail -F /var/log/external-dns.log | /usr/local/bin/update-pihole.sh
        volumeMounts:
        - name: script
          mountPath: /usr/local/bin/update-pihole.sh
          subPath: update-pihole.sh
      volumes:
      - name: script
        configMap:
          name: update-pihole-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: update-pihole-script
  namespace: external-dns
data:
  update-pihole.sh: |
    #!/bin/bash
    PIHOLE_SERVER="http://192.168.1.24"
    SESSION_TOKEN=$(curl -s -k --request POST -d '{"password":"NevadaMaybe11"}' ${PIHOLE_SERVER}/api/auth | jq -r '.session.sid')

    function add_dns_record() {
        local DOMAIN=$1
        local IP=$2

        curl -s -k --request POST \
            -H "Authorization: Bearer $SESSION_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"action\": \"add\", \"recordType\": \"A\", \"domain\": \"${DOMAIN}\", \"ip\": \"${IP}\"}" \
            ${PIHOLE_SERVER}/admin/api.php
    }

    while read LINE; do
        DOMAIN=$(echo $LINE | awk '{print $1}')
        IP=$(echo $LINE | awk '{print $2}')
        add_dns_record $DOMAIN $IP
    done
